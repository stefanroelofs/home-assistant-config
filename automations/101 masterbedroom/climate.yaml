- alias: bedroom_master_climate
  id: 3ed7cd1f-1296-48bb-b90d-887aaf3f9dbb
  mode: queued

  trigger:
    - platform: homeassistant
      event: start # in case the states aren't properly restored
      id: ha_start

    - platform: event
      event_type: automation_reloaded

    - platform: state
      entity_id:
        - binary_sensor.bedroom_master_windowsensor_left
        - binary_sensor.bedroom_master_windowsensor_right
        - binary_sensor.anybody_home
        - input_select.house

    - platform: time
      at:
        - &evening_start "22:00:00"
        - &evening_end "23:00:00"

  variables:
    anchors:
      - &target
        target:
          area_id: grote_slaapkamer

      - &turn_off
        <<: *target
        alias: "Turn off heating"
        service: climate.set_hvac_mode
        data:
          hvac_mode: "off"

      - &turn_on_low
        <<: *target
        alias: "Turn on heating to low temperature"
        service: climate.set_temperature
        data:
          hvac_mode: "heat"
          temperature: 14.0

      - &turn_on_high
        <<: *target
        alias: "Turn on heating to high temperature"
        service: climate.set_temperature
        data:
          hvac_mode: "heat"
          temperature: 15.0

  action:
    - alias: Check if this is triggered by HA restart
      choose:
        - conditions:
            condition: trigger
            id: ha_start
          sequence:
            - delay:
                minutes: 2

    - choose:
        - conditions:
            - alias: "When nobody is home"
              condition: state
              entity_id: binary_sensor.anybody_home
              state: "off"
          sequence:
            - *turn_off

        - conditions:
            - alias: "When outside temperature is too high"
              condition: numeric_state
              entity_id: sensor.buienradar_temperature
              above: 18.0
          sequence:
            - *turn_off

        - conditions:
            - alias: "When the left window is open"
              condition: state
              entity_id: binary_sensor.bedroom_master_windowsensor_left
              state: "on"
          sequence:
            - *turn_off

        - conditions:
            - alias: "When the right window is open"
              condition: state
              entity_id: binary_sensor.bedroom_master_windowsensor_right
              state: "on"
          sequence:
            - *turn_off

        - conditions:
            - alias: "When we are sleeping"
              condition: state
              entity_id: input_select.house
              state: "Sleep mode"
          sequence:
            - *turn_off

        - conditions:
            - alias: "When it is evening"
              condition: time # Set temp on evenings
              after: *evening_start
              before: *evening_end
          sequence:
            - *turn_on_high

      alias: Set low temperature
      default:
        - *turn_on_low
