# Device: Blitzwolf BW-SHP6, outlet with powermonitoring
# Info: https://www.esphome-devices.com/devices/blitzwolf-bw-shp6/
#
# One button for the relay, and one red led for the relay, as well as a blue status led
#
# GPIO Pinout
# Pin     Function (<2020)      Function (>2020)
# GPIO0   Red LED (inverted)    Red LED (inverted)
# GPIO2   Blue LED (inverted)   Blue LED (inverted)
# GPIO4                         HLW8012 - CF1
# GPIO5   HLW8012 - CF          HLW8012 - CF
# GPIO12  HLW8012 - SEL         HLW8012 - SEL
# GPIO13  Button (inverted)     Button (inverted)
# GPIO14  HLW8012 - CF1
# GPIO15  Relay                 Relay

esphome:
  name        : $devicename
  platform    : ESP8266
  board       : esp8285

<<: !include common.yaml
<<: !include status_led.yaml

sensor:
  - !include sensors/uptime.yaml
  - !include sensors/uptime_timestamp.yaml
  - !include sensors/wifi_signal.yaml

  # Measure power
  - platform             : hlw8012
    sel_pin:
      number             : GPIO12
      inverted           : true
    cf_pin               : GPIO05
    cf1_pin              : GPIO14
    current_resistor     : ${current_res}
    voltage_divider      : ${voltage_div}
    # Current sensor
    current:
      name               : "${devicelocation} Current"
      unit_of_measurement: A
      accuracy_decimals  : 3
      icon               : mdi:flash-outline
#      filters:
#        # Map from sensor -> measured value
#        - calibrate_linear:
#            - 0.06 -> 0.0
#            - 0.475 -> 0.65
#            - 1.8 -> 3.75
#            - 1.97 -> 4.07
#            - 2.92 -> 6.15
#            - 4.22 -> 8.7
#        # Make everything below 0.01A appear as just 0A.
#        # Furthermore it corrects 0.013A for the power usage of the plug.
#        - lambda: if (x < (0.01 - 0.005)) return 0; else return (x - 0.005);
    # Voltage sensor
    voltage:
      name               : "${devicelocation} Voltage"
      unit_of_measurement: V
      accuracy_decimals  : 1
      icon               : mdi:flash-outline
#      filters:
#        # Map from sensor -> measured value
#        - calibrate_linear:
#            - 0.0 -> 0.0
#            - 237 -> 230
    power:
      name               : "${devicelocation} Power"
      id                 : powerSensor
      unit_of_measurement: W
      accuracy_decimals  : 0
      icon               : mdi:flash-outline
      on_value_range:
        - above: ${max_power}
          then:
            - switch.turn_off: relay
            - homeassistant.service:
                service  : persistent_notification.create
                data:
                  title  : Message from ${devicelocation}
                data_template:
                  message: Switch turned off because power exceeded ${max_power}W
#      filters:
#        # Map from sensor -> measured value
#        - calibrate_linear:
#            - 0.1 -> 0.0
#            - 196 -> 105
#            - 243 -> 260
#            - 678 -> 700
#            - 898 -> 940
#            - 1908 -> 1985
#        # Make everything below 2W appear as just 0W.
#        # Furthermore it corrects 1.14W for the power usage of the plug.
#        - lambda         : if (x < (2 + 0.5)) return 0; else return (x - 0.5);
    change_mode_every    : 8
    update_interval      : 60s

  - platform             : total_daily_energy
    name                 : "${devicelocation} Total Daily Energy"
    power_id             : powerSensor
    filters:
        # Multiplication factor from W to kW is 0.001
        - multiply       : 0.001
    unit_of_measurement  : kWh
    icon                 : mdi:clock-alert

binary_sensor:
  # Binary sensor for the button press
  - platform             : gpio
    id                   : button
    internal             : true
    pin:
      number             : GPIO13  # Button input
   #   inverted           : true    # Niet nodig omdat we toch alleen togglen?
    filters:
      - delayed_on       : 10ms
      - delayed_off      : 10ms
    on_press:
      - switch.toggle    : relay

  - !include binary_sensors/status.yaml

switch:
  - !include switches/restart.yaml

  # Switch to toggle the relay
  - platform             : gpio
    pin                  : GPIO15  # Relay output
    id                   : relay
    name                 : "${devicelocation} Relay"
    on_turn_on:
      - light.turn_on    : led
    on_turn_off:
      - light.turn_off   : led

light:
  # Light entity for state led
  - platform             : monochromatic
    name                 : "${devicelocation} State Led"
    id                   : led
    output               : state_led

output:
  # Physical output for state led
  - platform             : esp8266_pwm
    id                   : state_led
    pin:
      number             : GPIO02  # State led output
      inverted           : true
